from pydantic import BaseModel, Field, ConfigDict
from typing import Optional, Dict, List
from datetime import date


# üëá –ü–æ–¥—Å—Ö–µ–º–∞ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
class AttendanceRecord(BaseModel):
    present: bool
    reason: Optional[str] = None


# üëá –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
class ScheduleBase(BaseModel):
    name: str
    room_id: str
    type: str  # group | individual | special
    trainer_id: str
    group_id: Optional[str] = None
    date: date
    start_time: str
    end_time: str

    # ‚úÖ –º–∞—Å—Å–∏–≤ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    days_of_week: Optional[List[str]] = Field(default_factory=list)

    # ‚úÖ —Å–ø–∏—Å–æ–∫ ID –∫–ª–∏–µ–Ω—Ç–æ–≤
    client_ids: Optional[List[str]] = Field(default_factory=list)

    # ‚úÖ —Å–ª–æ–≤–∞—Ä—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
    attendance: Optional[Dict[str, AttendanceRecord]] = Field(default_factory=dict)

    # ‚úÖ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ –ª–∏ –∑–∞–Ω—è—Ç–∏–µ
    conducted: bool = False


# üëá –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
class ScheduleCreate(ScheduleBase):
    pass


# üëá –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–ø–∏—Å–∏
class ScheduleUpdate(BaseModel):
    name: Optional[str] = None
    room_id: Optional[str] = None
    type: Optional[str] = None
    trainer_id: Optional[str] = None
    group_id: Optional[str] = None
    date: Optional[date] = None
    start_time: Optional[str] = None
    end_time: Optional[str] = None
    days_of_week: Optional[List[str]] = None
    client_ids: Optional[List[str]] = None
    attendance: Optional[Dict[str, AttendanceRecord]] = None
    conducted: Optional[bool] = None


# üëá –î–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (GET)
class ScheduleRead(ScheduleBase):
    id: str

    model_config = ConfigDict(from_attributes=True)
